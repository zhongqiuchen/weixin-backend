<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.dao.RecordMapper">
  <resultMap id="BaseResultMap" type="com.example.pojo.Record">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="toName" jdbcType="VARCHAR" property="toName" />
    <result column="words" jdbcType="VARCHAR" property="words" />
    <result column="chatimg" jdbcType="VARCHAR" property="chatimg" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, toName, words, chatimg, time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ${table} 
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectAll" parameterType="String" resultMap="BaseResultMap">
   select 
   <include refid="Base_Column_List" />
   from ${value} 
  </select>
  
  <select id="selectRecordsByNum" parameterType="String" resultMap="BaseResultMap">
   select 
   <include refid="Base_Column_List" />
   from ${value} 
   where name=#{toname,jdbcType=VARCHAR} or toName=#{toname,jdbcType=VARCHAR}
   ORDER BY id DESC 
   limit #{num1,jdbcType=INTEGER}, #{num2,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ${table} 
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="com.example.pojo.Record">
    insert into ${table}  (name, toName, 
      words, chatimg, time
      )
    values (#{name,jdbcType=VARCHAR}, #{toName,jdbcType=VARCHAR}, 
      #{words,jdbcType=VARCHAR}, #{chatimg,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}
      )
  </insert>
  
  <insert id="insertInTable" parameterType="com.example.pojo.Record">
    insert into ${table} 
    (name, toName, words, chatimg, time
      )
    values (#{name,jdbcType=VARCHAR}, #{toName,jdbcType=VARCHAR}, 
      #{words,jdbcType=VARCHAR}, #{chatimg,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}
      )
  </insert>
  
  
  <insert id="insertSelective" parameterType="com.example.pojo.Record">
    insert into ${table} 
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="toName != null">
        toName,
      </if>
      <if test="words != null">
        words,
      </if>
      <if test="chatimg != null">
        chatimg,
      </if>
      <if test="time != null">
        time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="toName != null">
        #{toName,jdbcType=VARCHAR},
      </if>
      <if test="words != null">
        #{words,jdbcType=VARCHAR},
      </if>
      <if test="chatimg != null">
        #{chatimg,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.pojo.Record">
    update ${table} 
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="toName != null">
        toName = #{toName,jdbcType=VARCHAR},
      </if>
      <if test="words != null">
        words = #{words,jdbcType=VARCHAR},
      </if>
      <if test="chatimg != null">
        chatimg = #{chatimg,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.pojo.Record">
    update ${table} 
    set name = #{name,jdbcType=VARCHAR},
      toName = #{toName,jdbcType=VARCHAR},
      words = #{words,jdbcType=VARCHAR},
      chatimg = #{chatimg,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>