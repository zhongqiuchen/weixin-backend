<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.example.pojo.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <id column="name" jdbcType="VARCHAR" property="name" />
    <result column="pwd" jdbcType="VARCHAR" property="pwd" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="area" jdbcType="VARCHAR" property="area" />
    <result column="img" jdbcType="VARCHAR" property="img" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, pwd, nickname, area, img
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.example.pojo.UserKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from general_users
    where id = #{id,jdbcType=INTEGER}
      and name = #{name,jdbcType=VARCHAR}
  </select>
  
  <select id="selectByUserPwd" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from general_users
    where name = #{username,jdbcType=VARCHAR}
    and pwd = #{password,jdbcType=VARCHAR}
  </select>
  
  <select id="selectByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from general_users
    where name = #{username,jdbcType=VARCHAR}
  </select>
  
  <select id="selectByNickname" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from general_users
    where nickname = #{nickname,jdbcType=VARCHAR}
  </select>
  
  
  <delete id="deleteByPrimaryKey" parameterType="com.example.pojo.UserKey">
    delete from general_users
    where id = #{id,jdbcType=INTEGER}
      and name = #{name,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.example.pojo.User">
    insert into general_users (id, name, pwd, 
      nickname, area, img
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{pwd,jdbcType=VARCHAR}, 
      #{nickname,jdbcType=VARCHAR}, #{area,jdbcType=VARCHAR}, #{img,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.pojo.User">
    insert into general_users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="pwd != null">
        pwd,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="area != null">
        area,
      </if>
      <if test="img != null">
        img,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null">
        #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        #{area,jdbcType=VARCHAR},
      </if>
      <if test="img != null">
        #{img,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.pojo.User">
    update general_users
    <set>
      <if test="pwd != null">
        pwd = #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        area = #{area,jdbcType=VARCHAR},
      </if>
      <if test="img != null">
        img = #{img,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
      and name = #{name,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.pojo.User">
    update general_users
    set pwd = #{pwd,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      area = #{area,jdbcType=VARCHAR},
      img = #{img,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
      and name = #{name,jdbcType=VARCHAR}
  </update>
</mapper>